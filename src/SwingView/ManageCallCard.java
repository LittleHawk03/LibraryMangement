/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SwingView;

import Controller.CallCardDAO;
import Controller.CallCardDetailDAO;
import Controller.ReadCSV;
import Model.CallCard;
import Model.CallCardDetail;

import java.sql.ResultSet;
import java.time.LocalDate;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author honahl
 */
public class ManageCallCard extends javax.swing.JFrame {

    private CallCardDAO callCardDAO = new CallCardDAO();
    private CallCardDetailDAO callCardDetailDAO = new CallCardDetailDAO();
    private String[] data = ReadCSV.read();
    private DefaultTableModel model;

    /**
     * Creates new form ManageCallCard
     */
    public ManageCallCard() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        empID_search.setText(data[0]);
        rSDateBorrow.setDatoFecha(new Date());
        creatTable();
        addWindowListener(new java.awt.event.WindowAdapter() {

            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new HomePage().setVisible(true);
                    }
                });
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emp_id = new javax.swing.JTextField();
        CallCard_id = new javax.swing.JTextField();
        reader_id = new javax.swing.JTextField();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel8 = new javax.swing.JLabel();
        ReaderID_search = new javax.swing.JTextField();
        empID_search = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Creat_Button = new keeptoo.KGradientPanel();
        creat_text = new javax.swing.JLabel();
        search_Button1 = new keeptoo.KGradientPanel();
        search_text1 = new javax.swing.JLabel();
        back_button = new javax.swing.JLabel();
        IdSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        book_id = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        rSDateBorrow = new rojeru_san.componentes.RSDateChooser();
        rSDateDueTo = new rojeru_san.componentes.RSDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        return_book = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        add_button = new keeptoo.KGradientPanel();
        add_text = new javax.swing.JLabel();
        deleteBook_button = new keeptoo.KGradientPanel();
        deleteBook_text = new javax.swing.JLabel();
        update_button = new keeptoo.KGradientPanel();
        Update_text = new javax.swing.JLabel();
        deleteCall_button1 = new keeptoo.KGradientPanel();
        deleteCall_text = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rSTableMetro1 = new rojerusan.RSTableMetro();
        return_text2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1260, 780));

        emp_id.setPreferredSize(new java.awt.Dimension(214, 40));

        CallCard_id.setPreferredSize(new java.awt.Dimension(214, 60));
        CallCard_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CallCard_idActionPerformed(evt);
            }
        });

        reader_id.setPreferredSize(new java.awt.Dimension(214, 40));

        jLabel8.setFont(new java.awt.Font("Nimbus Sans L", 1, 23)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Manage CallCard");
        jLabel8.setToolTipText("");

        ReaderID_search.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 102, 204)));

        empID_search.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 51, 153)));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID Reader");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ID employee");

        Creat_Button.setkEndColor(new java.awt.Color(255, 255, 0));
        Creat_Button.setkStartColor(new java.awt.Color(255, 255, 0));
        Creat_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Creat_ButtonMouseClicked(evt);
            }
        });

        creat_text.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        creat_text.setForeground(new java.awt.Color(0, 0, 153));
        creat_text.setText("CREAT");
        creat_text.setToolTipText("");
        creat_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creat_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Creat_ButtonLayout = new javax.swing.GroupLayout(Creat_Button);
        Creat_Button.setLayout(Creat_ButtonLayout);
        Creat_ButtonLayout.setHorizontalGroup(
            Creat_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Creat_ButtonLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(creat_text)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        Creat_ButtonLayout.setVerticalGroup(
            Creat_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Creat_ButtonLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(creat_text)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        search_Button1.setkEndColor(new java.awt.Color(255, 255, 0));
        search_Button1.setkStartColor(new java.awt.Color(255, 255, 0));
        search_Button1.setPreferredSize(new java.awt.Dimension(225, 60));
        search_Button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_Button1MouseClicked(evt);
            }
        });

        search_text1.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        search_text1.setForeground(new java.awt.Color(0, 0, 153));
        search_text1.setText("SEARCH");
        search_text1.setToolTipText("");
        search_text1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_text1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout search_Button1Layout = new javax.swing.GroupLayout(search_Button1);
        search_Button1.setLayout(search_Button1Layout);
        search_Button1Layout.setHorizontalGroup(
            search_Button1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_Button1Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(search_text1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        search_Button1Layout.setVerticalGroup(
            search_Button1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_Button1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(search_text1)
                .addGap(19, 19, 19))
        );

        back_button.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        back_button.setForeground(new java.awt.Color(255, 255, 255));
        back_button.setText("BACK TO HOME");
        back_button.setToolTipText("");
        back_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_buttonMouseClicked(evt);
            }
        });

        IdSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 102, 204)));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID CallCard for searching");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(search_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Creat_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(empID_search)
                            .addComponent(ReaderID_search)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(IdSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(14, 14, 14))))
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReaderID_search, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empID_search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Creat_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IdSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(search_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(back_button)
                .addGap(25, 25, 25))
        );

        jLabel1.setText("callcard id :");

        jLabel5.setText("reader id :");

        jLabel6.setText("employee id :");

        jLabel7.setText("Book id :");

        jLabel9.setText("dute to :");

        jLabel10.setText("Borrow day :");

        return_book.setText("0");
        return_book.setPreferredSize(new java.awt.Dimension(64, 64));

        jLabel11.setText("return :");

        add_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_buttonMouseClicked(evt);
            }
        });

        add_text.setFont(new java.awt.Font("Nimbus Sans L", 1, 12)); // NOI18N
        add_text.setForeground(new java.awt.Color(255, 255, 255));
        add_text.setText("ADD");
        add_text.setToolTipText("");
        add_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout add_buttonLayout = new javax.swing.GroupLayout(add_button);
        add_button.setLayout(add_buttonLayout);
        add_buttonLayout.setHorizontalGroup(
            add_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_buttonLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(add_text, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        add_buttonLayout.setVerticalGroup(
            add_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_buttonLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(add_text)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteBook_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBook_buttonMouseClicked(evt);
            }
        });

        deleteBook_text.setFont(new java.awt.Font("Nimbus Sans L", 1, 12)); // NOI18N
        deleteBook_text.setForeground(new java.awt.Color(255, 255, 255));
        deleteBook_text.setText("DELETE BOOK");
        deleteBook_text.setToolTipText("");
        deleteBook_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBook_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout deleteBook_buttonLayout = new javax.swing.GroupLayout(deleteBook_button);
        deleteBook_button.setLayout(deleteBook_buttonLayout);
        deleteBook_buttonLayout.setHorizontalGroup(
            deleteBook_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteBook_buttonLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(deleteBook_text)
                .addGap(35, 35, 35))
        );
        deleteBook_buttonLayout.setVerticalGroup(
            deleteBook_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteBook_buttonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteBook_text)
                .addGap(14, 14, 14))
        );

        update_button.setPreferredSize(new java.awt.Dimension(157, 45));
        update_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                update_buttonMouseClicked(evt);
            }
        });

        Update_text.setFont(new java.awt.Font("Nimbus Sans L", 1, 12)); // NOI18N
        Update_text.setForeground(new java.awt.Color(255, 255, 255));
        Update_text.setText("UPDATE CALLCARD");
        Update_text.setToolTipText("");
        Update_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Update_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout update_buttonLayout = new javax.swing.GroupLayout(update_button);
        update_button.setLayout(update_buttonLayout);
        update_buttonLayout.setHorizontalGroup(
            update_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, update_buttonLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(Update_text)
                .addGap(16, 16, 16))
        );
        update_buttonLayout.setVerticalGroup(
            update_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, update_buttonLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(Update_text)
                .addGap(14, 14, 14))
        );

        deleteCall_button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteCall_button1MouseClicked(evt);
            }
        });

        deleteCall_text.setFont(new java.awt.Font("Nimbus Sans L", 1, 12)); // NOI18N
        deleteCall_text.setForeground(new java.awt.Color(255, 255, 255));
        deleteCall_text.setText("DELETE CALLCARD");
        deleteCall_text.setToolTipText("");
        deleteCall_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteCall_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout deleteCall_button1Layout = new javax.swing.GroupLayout(deleteCall_button1);
        deleteCall_button1.setLayout(deleteCall_button1Layout);
        deleteCall_button1Layout.setHorizontalGroup(
            deleteCall_button1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteCall_button1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(deleteCall_text)
                .addGap(25, 25, 25))
        );
        deleteCall_button1Layout.setVerticalGroup(
            deleteCall_button1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteCall_button1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(deleteCall_text)
                .addGap(14, 14, 14))
        );

        rSTableMetro1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CallCard_ID", "Book_ID", "name", "Borrow Day", "Due to", "Return"
            }
        ));
        rSTableMetro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rSTableMetro1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rSTableMetro1);

        return_text2.setFont(new java.awt.Font("Nimbus Sans L", 1, 12)); // NOI18N
        return_text2.setText("Set all return");
        return_text2.setToolTipText("");
        return_text2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                return_text2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CallCard_id, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(book_id, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rSDateBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reader_id, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emp_id, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rSDateDueTo, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(return_book, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(return_text2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(73, 73, 73)
                                        .addComponent(deleteBook_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(deleteCall_button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 75, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CallCard_id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reader_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emp_id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel9))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(book_id, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel10))
                    .addComponent(rSDateBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rSDateDueTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(return_book, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(update_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteBook_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(deleteCall_button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(return_text2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creat_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creat_textMouseClicked
        if (empID_search.getText().isEmpty() || ReaderID_search.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "invalid text");
        } else {

            creat();
        }
    }//GEN-LAST:event_creat_textMouseClicked

    private void Creat_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Creat_ButtonMouseClicked
        if (empID_search.getText().isEmpty() || ReaderID_search.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "invalid text");
        } else {

            creat();
        }
    }//GEN-LAST:event_Creat_ButtonMouseClicked

    private void search_text1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_text1MouseClicked
        if (IdSearch.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
        } else {
            deleteRow();
            searchCallCard();

        }
    }//GEN-LAST:event_search_text1MouseClicked

    private void search_Button1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_Button1MouseClicked
        if (IdSearch.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
        } else {
            deleteRow();
            searchCallCard();

        }
    }//GEN-LAST:event_search_Button1MouseClicked

    private void CallCard_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CallCard_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CallCard_idActionPerformed

    private void add_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_textMouseClicked
        if (checkEmpty()) {

            addNewBook();

        }
    }//GEN-LAST:event_add_textMouseClicked

    private void add_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonMouseClicked
        if (checkEmpty()) {
            addNewBook();

        }
    }//GEN-LAST:event_add_buttonMouseClicked

    private void deleteBook_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBook_textMouseClicked
        deleteBook();
    }//GEN-LAST:event_deleteBook_textMouseClicked

    private void deleteBook_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBook_buttonMouseClicked
        deleteBook();
    }//GEN-LAST:event_deleteBook_buttonMouseClicked

    private void update_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonMouseClicked
        update();
    }//GEN-LAST:event_update_buttonMouseClicked

    private void deleteCall_button1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteCall_button1MouseClicked
        deleteCallCard();
    }//GEN-LAST:event_deleteCall_button1MouseClicked

    private void Update_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Update_textMouseClicked
        update();
    }//GEN-LAST:event_Update_textMouseClicked

    private void deleteCall_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteCall_textMouseClicked
        deleteCallCard();
    }//GEN-LAST:event_deleteCall_textMouseClicked

    private void return_text2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_return_text2MouseClicked
        if (CallCard_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
        } else {
            setAllReturned();
        }
    }//GEN-LAST:event_return_text2MouseClicked

    private void rSTableMetro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rSTableMetro1MouseClicked
        int row = rSTableMetro1.getSelectedRow();
        TableModel getModel = rSTableMetro1.getModel();

        if (row >= 0) {
            CallCard_id.setText(getModel.getValueAt(row, 0).toString());
            book_id.setText(getModel.getValueAt(row, 1).toString());
            rSDateBorrow.setDatoFecha((Date) getModel.getValueAt(row, 3));
            rSDateDueTo.setDatoFecha((Date) getModel.getValueAt(row, 4));
            return_book.setText(getModel.getValueAt(row, 5).toString());
        }
    }//GEN-LAST:event_rSTableMetro1MouseClicked

    private void back_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_buttonMouseClicked
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_back_buttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCallCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCallCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCallCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCallCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ManageCallCard().setVisible(true);
//            }
//        });
    }

    public void setAllReturned() {
        int callCardID = Integer.parseInt(CallCard_id.getText());

        if (callCardDetailDAO.SetALlReturned(callCardID)) {
            deleteRow();
            IdSearch.setText(CallCard_id.getText());
            searchCallCard();
        }
    }

    public boolean checkEmpty() {
        if (CallCard_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (emp_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (reader_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (rSDateBorrow.getDatoFecha() == null) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (rSDateDueTo.getDatoFecha() == null) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (return_book.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkEmptyForUpdate() {
        if (CallCard_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (emp_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else if (reader_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "this field cant be empty");
            return false;
        } else {
            return true;
        }
    }

    public boolean updateCallCard() {

        if (checkEmptyForUpdate()) {
            int callCardID = Integer.parseInt(CallCard_id.getText());
            int readID = Integer.parseInt(reader_id.getText());
            int empID = Integer.parseInt(emp_id.getText());

            CallCard callCard = new CallCard();
            callCard.setCallCardID(callCardID);
            callCard.setEMP_ID(empID);
            callCard.setRead_id(readID);

            if (callCardDAO.update(callCard)) {
                IdSearch.setText(CallCard_id.getText());
                return true;
            } else {
                return false;
            }

        } else {
            return false;
        }

    }

    public boolean updateCallCardDetail() {
        int row = rSTableMetro1.getSelectedRow();
        TableModel getModel = rSTableMetro1.getModel();

        if (row >= 0) {

            //get information of callCardDetai           
            int callcard_id = Integer.parseInt(CallCard_id.getText());
            int bookID = Integer.parseInt(book_id.getText());
            Date BorrowDate = rSDateBorrow.getDatoFecha();
            Date DueTo = rSDateDueTo.getDatoFecha();
            int returnBook = Integer.parseInt(return_book.getText());

            CallCardDetail callCardDetail = new CallCardDetail();
            callCardDetail.setPM_ID(callcard_id);
            callCardDetail.setBookID(bookID);
            callCardDetail.setBorrowDate(BorrowDate);
            callCardDetail.setDueTo(DueTo);
            callCardDetail.setReturnBook(returnBook);

            if (callCardDetailDAO.update(callCardDetail)) {
                return true;
            } else {
                return false;
            }

        } else {
            JOptionPane.showMessageDialog(this, "please choose the row be update");
            return false;
        }
    }

    public void update() {
        boolean a = updateCallCard();
        boolean b = updateCallCardDetail();

        if (a && b) {
            searchCallCard();
            JOptionPane.showMessageDialog(this, "update both success");
        } else if (a) {
            searchCallCard();
            JOptionPane.showMessageDialog(this, "update callcard sucess");
        } else if (b) {
            searchCallCard();
            JOptionPane.showMessageDialog(this, "update book sucess");
        } else {
            JOptionPane.showMessageDialog(this, "update unsucess");
        }
    }

    public void deleteCallCard() {
        try {

            int callcardID = Integer.parseInt(CallCard_id.getText());
            boolean delteDetail = callCardDetailDAO.deleteALL(callcardID);
            boolean deleteCall = callCardDAO.delete(callcardID);

            if (delteDetail && deleteCall) {
                JOptionPane.showMessageDialog(this, "delete successfull");
                CallCard_id.setText("");
                emp_id.setText("");
                reader_id.setText("");
                deleteRow();

            } else {
                JOptionPane.showMessageDialog(this, "delete nonsuccessfull");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "invalid text");
            e.printStackTrace();
        }
    }

    public void deleteBook() {
        int row = rSTableMetro1.getSelectedRow();
        TableModel getModel = rSTableMetro1.getModel();

        if (row >= 0) {
            int pm_id = Integer.parseInt(getModel.getValueAt(row, 0).toString());
            int bookID = Integer.parseInt(getModel.getValueAt(row, 1).toString());

            try {
                if (callCardDetailDAO.delete(pm_id, bookID)) {
                    model.removeRow(row);

                    JOptionPane.showMessageDialog(this, "delete successfull");
                } else {
                    JOptionPane.showMessageDialog(this, "delete unsuccessfull");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "invalid text");
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "please choose the row be delete");
        }

    }

    public void addNewBook() {

        int pm_id = Integer.parseInt(CallCard_id.getText());
        int book_id = Integer.parseInt(this.book_id.getText());
        Date borrowDate = rSDateBorrow.getDatoFecha();
        Date Dueto = rSDateDueTo.getDatoFecha();
        int returbook = Integer.parseInt(return_book.getText());
        try {
//            deleteRow();
            CallCardDetail callCardDetail = new CallCardDetail();
            callCardDetail.setBookID(book_id);
            callCardDetail.setPM_ID(pm_id);
            callCardDetail.setBorrowDate(borrowDate);
            callCardDetail.setDueTo(Dueto);
            callCardDetail.setReturnBook(returbook);

            if (callCardDetailDAO.creat(callCardDetail)) {
                ResultSet rs = callCardDetailDAO.searchAll(pm_id);
                JOptionPane.showMessageDialog(this, "add successfull");
                deleteRow();
                while (rs.next()) {

                    Object[] obj = {rs.getInt("PM_ID"), rs.getInt("BookID"), rs.getString("BookName"), rs.getDate("DateBorrow"), rs.getDate("DueTo"), rs.getInt("BookReturn")};
                    model = (DefaultTableModel) rSTableMetro1.getModel();
                    model.addRow(obj);
                }

            } else {
                JOptionPane.showMessageDialog(this, "add unsuccessdull");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "invalid text");
            e.printStackTrace();
        }
    }

    public void searchCallCard() {
        int id = Integer.parseInt(IdSearch.getText());
        try {
            ResultSet rs = callCardDetailDAO.searchAll(id);
            CallCard callCard = callCardDAO.search(id);

            deleteRow();

            if (rs != null && callCard != null) {
                CallCard_id.setText(Integer.toString(callCard.getCallCardID()));
                emp_id.setText(Integer.toString(callCard.getEMP_ID()));
                reader_id.setText(Integer.toString(callCard.getRead_id()));
                while (rs.next()) {
                    int pm_id = rs.getInt("PM_ID");
                    int BookID = rs.getInt("BookID");
                    String name = rs.getString("BookName");
                    Date borrowDate = rs.getDate("DateBorrow");
                    Date DueTO = rs.getDate("DueTo");
                    int returnBook = rs.getInt("BookReturn");

                    Object[] obj = {pm_id, BookID, name, borrowDate, DueTO, returnBook};
                    model = (DefaultTableModel) rSTableMetro1.getModel();
                    model.addRow(obj);
                }

            } else {
                JOptionPane.showMessageDialog(this, "cant find this book");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "invalid text");
            e.printStackTrace();
        }
    }

    public void creat() {

        int readID = Integer.parseInt(ReaderID_search.getText());
        int empID = Integer.parseInt(empID_search.getText());

        try {
            CallCard callCard = new CallCard();
            callCard.setEMP_ID(empID);
            callCard.setRead_id(readID);
            int n = callCardDAO.creat(callCard);
            if (n > 0) {
                JOptionPane.showMessageDialog(this, "add successfull");
                CallCard_id.setText(Integer.toString(n));
                reader_id.setText(ReaderID_search.getText());
                emp_id.setText(empID_search.getText());

            } else {
                JOptionPane.showMessageDialog(this, "add nonsuccessfull");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "invalid text");
            e.printStackTrace();
        }
    }

    public void deleteRow() {
        int n = model.getRowCount();
        for (int i = n - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    public void creatTable() {
        Object[] obj = {"", "", "", "", ""};
        model = (DefaultTableModel) rSTableMetro1.getModel();
        model.addRow(obj);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CallCard_id;
    private keeptoo.KGradientPanel Creat_Button;
    private javax.swing.JTextField IdSearch;
    private javax.swing.JTextField ReaderID_search;
    private javax.swing.JLabel Update_text;
    private keeptoo.KGradientPanel add_button;
    private javax.swing.JLabel add_text;
    private javax.swing.JLabel back_button;
    private javax.swing.JTextField book_id;
    private javax.swing.JLabel creat_text;
    private keeptoo.KGradientPanel deleteBook_button;
    private javax.swing.JLabel deleteBook_text;
    private keeptoo.KGradientPanel deleteCall_button1;
    private javax.swing.JLabel deleteCall_text;
    private javax.swing.JTextField empID_search;
    private javax.swing.JTextField emp_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private rojeru_san.componentes.RSDateChooser rSDateBorrow;
    private rojeru_san.componentes.RSDateChooser rSDateDueTo;
    private rojerusan.RSTableMetro rSTableMetro1;
    private javax.swing.JTextField reader_id;
    private javax.swing.JTextField return_book;
    private javax.swing.JLabel return_text2;
    private keeptoo.KGradientPanel search_Button1;
    private javax.swing.JLabel search_text1;
    private keeptoo.KGradientPanel update_button;
    // End of variables declaration//GEN-END:variables
}
